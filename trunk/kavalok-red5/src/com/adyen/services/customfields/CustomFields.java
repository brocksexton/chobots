
/*
 * 
 */

package com.adyen.services.customfields;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.1.4
 * Fri Feb 13 12:35:42 EET 2009
 * Generated source version: 2.1.4
 * 
 */


@WebServiceClient(name = "CustomFields", 
                  wsdlLocation = "https://ca-test.adyen.com/ca/services/CustomFields?wsdl",
                  targetNamespace = "http://customfields.services.adyen.com") 
public class CustomFields extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://customfields.services.adyen.com", "CustomFields");
    public final static QName CustomFieldsHttpPort = new QName("http://customfields.services.adyen.com", "CustomFieldsHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("https://ca-test.adyen.com/ca/services/CustomFields?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from https://ca-test.adyen.com/ca/services/CustomFields?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public CustomFields(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CustomFields(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CustomFields() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns CustomFieldsPortType
     */
    @WebEndpoint(name = "CustomFieldsHttpPort")
    public CustomFieldsPortType getCustomFieldsHttpPort() {
        return super.getPort(CustomFieldsHttpPort, CustomFieldsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomFieldsPortType
     */
    @WebEndpoint(name = "CustomFieldsHttpPort")
    public CustomFieldsPortType getCustomFieldsHttpPort(WebServiceFeature... features) {
        return super.getPort(CustomFieldsHttpPort, CustomFieldsPortType.class, features);
    }

}
