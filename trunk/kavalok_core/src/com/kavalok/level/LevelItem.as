package com.kavalok.level{	import com.kavalok.Global;	import com.kavalok.dialogs.Dialogs;	import com.kavalok.events.EventSender;	import com.kavalok.gameplay.commands.RetriveStuffCommand;	import com.kavalok.interfaces.IRequirement;	import com.kavalok.level.to.Level;	import com.kavalok.utils.Arrays;	import com.kavalok.utils.Maths;	import com.kavalok.utils.comparing.EqualsRequirement;	import com.kavalok.utils.comparing.PropertyCompareRequirement;	import com.kavalok.utils.comparing.RequirementsCollection;		import flash.events.Event;
		public class LevelItem	{				private static var _instance:LevelItem;				public static var awardableItems:Array = 			[				new Level("mustache", 4, "C", 2467),				new Level("radio_bg", 8, "B", 2052),				new Level("air_board_palm", 12, "C", 952),				new Level("flag_chobots", 16, "B", 519),				new Level("propellerheads", 20, "C", 361),				new Level("Ghost", 24, "C", 360),				new Level("flag_heart", 28, "C", 532),				new Level("mask_fail", 32, "C", 2454),				new Level("hat_ash", 36, "C", 2379),				new Level("witch", 40, "C", 541),				new Level("kostum_dracon", 44, "C", 441),				new Level("red_rope", 48, "C", 2504),				new Level("card24_honeycomb", 52, "B", 2056),				new Level("shirt_lightbulb", 56, "C", 2537),				new Level("spy_goggles_s", 60, "C", 2577)											];				private var _itemAwardedLevelEvent:EventSender = new EventSender();		private var _levelStatusCheckfinish:EventSender = new EventSender();				public function LevelItem()		{						_instance = this;				}				public static function get instance():LevelItem		{			if(_instance != null)				return _instance;			else				_instance = new LevelItem()				return _instance;		}				public function checkLevelStatus():void 		{			for each(var i:Level in awardableItems) 			{				if(i != null){					// i is not null and the person does not have the item already					if (i.levelNumber == Global.charManager.charLevel && Global.charManager.stuffs.stuffExists(i.itemName) != true) 					{						trace("adding item to user, reached level, does not have the item already: " + i.itemName);						//new RetriveStuffCommand(i.itemName, "Level " + Global.charManager.charLevel, Maths.random(0xffffff)).execute();						//_itemAwardedLevelEvent.sendEvent(i);					}				}							}						levelStatusCheckFinish.sendEvent();		}				public function get itemAwardedLevelEvent():EventSender
		{
			return _itemAwardedLevelEvent;
		}				public function get levelStatusCheckFinish():EventSender		{			return _levelStatusCheckfinish;		}		public static function get itemId():int		{			for each(var o:Level in awardableItems)			{				if(o.levelNumber == Global.charManager.charLevel) 				{					return o.itemId;				}			}			//return Level(Arrays.findByProperty(awardableItems, "levelNumber", Global.charManager.charLevel)).itemId;			//return 0;			return 0;		}				public static function get itemType():String		{			for each(var o:Level in awardableItems)			{				if(o.levelNumber == Global.charManager.charLevel) 				{					return o.placement;				}			}						return "";		}				public static function get fileName():String		{			for each(var o:Level in awardableItems)			{				if(o.levelNumber == Global.charManager.charLevel) 				{					return o.itemName;				}			}						return "";		}	}}