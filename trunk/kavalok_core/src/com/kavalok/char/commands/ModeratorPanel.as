package com.kavalok.char.commands{	import com.kavalok.Global;	import com.kavalok.char.Char;	import com.kavalok.dialogs.DialogModeratorView;	import com.kavalok.commands.location.GotoLocationCommand;	import com.kavalok.dialogs.DialogYesNoView;	import com.kavalok.gameplay.notifications.Notification;	import com.kavalok.dialogs.Dialogs;	import com.kavalok.services.AdminService;	import com.kavalok.services.LogService;	//import common.utils.StringUtil;	public class ModeratorPanel extends CharCommandBase	{				public var _charName:String;				override public function execute():void		{			_charName = charId;	Global.charsUserName = charId;				if(Global.charManager.isModerator)	       new AdminService(initializePanel).openModeratorPanel();	       else if(Global.charManager.permissions.indexOf("tools;") != -1)	       initializePanel(true);	       		trace("viewing username: " + charId);		}				private function initializePanel(result:Boolean):void		{						if(result || Global.charManager.permissions.indexOf("tools;") != -1){												var dialog:DialogModeratorView = Dialogs.showModeratorDialog();					dialog._usersId = char.userId;					dialog.charUserName= _charName;					dialog.kick.addListener(kickUser);					dialog.chatBan.addListener(chatBanUser);					dialog.chatBan2.addListener(chatBanUser2);					dialog.chatBan3.addListener(chatBanUser3);					dialog.warn.addListener(warnUser);					dialog.ban.addListener(banUser);					dialog.changeLoc.addListener(changeLocation);				} else {					return;				}		}		private function kickUser():void		{			new AdminService().kickUserOut(char.userId, false);			new AdminService().addPanelLog("[GM] " + Global.upperCase(Global.charManager.charId), "Kicked out " + Global.charsUserName, Global.getPanelDate());			new LogService().toolsLog("Kicked out", char.userId, Global.charsUserName, "tools");		}				private function warnUser():void		{			new AdminService().sendAgentRules(char.userId);			new AdminService().addPanelLog("[GM] " + Global.upperCase(Global.charManager.charId), "Sent rules to " + Global.charsUserName, Global.getPanelDate());			new LogService().toolsLog("Sent rules", char.userId, Global.charsUserName, "tools");		}				private function changeLocation():void		{				var dialog:DialogYesNoView = Dialogs.showYesNoDialog("Do you want to go to " + (Global.messages[char.location]) + "?");				dialog.yes.addListener(newLocation);						}				private function newLocation():void		{			if(char.location.indexOf("home") == -1)		   Global.moduleManager.loadModule(char.location);		   else		   Dialogs.showOkDialog("You may not visit homes.");		trace("Going to... " + char.location)				}		private function chatBanUser():void		{			new AdminService().disableGameChatPeriod(char.userId, 1);			new AdminService().addPanelLog("[GM] " + Global.upperCase(Global.charManager.charId), "Banned chat of " + Global.charsUserName + " for 5 minutes", Global.getPanelDate());			new LogService().toolsLog("Banned chat 5min", char.userId, Global.charsUserName, "tools");		}		private function chatBanUser2():void		{			new AdminService().disableGameChatPeriod(char.userId, 2);			new AdminService().addPanelLog("[GM] " + Global.upperCase(Global.charManager.charId), "Banned chat of " + Global.charsUserName + " for 15 minutes", Global.getPanelDate());			new LogService().toolsLog("Banned chat 15min", char.userId, Global.charsUserName, "tools");		}		private function chatBanUser3():void		{			new AdminService().disableGameChatPeriod(char.userId, 3);			new AdminService().addPanelLog("[GM] " + Global.upperCase(Global.charManager.charId), "Banned chat of " + Global.charsUserName + " for 12 hours", Global.getPanelDate());			new LogService().toolsLog("Banned chat 12hrs", char.userId, Global.charsUserName, "tools");			}		private function banUser():void		{		}		public function get whatsHisName():String		{			return _charName;		}	}}