package com.kavalok.char.commands{	import com.kavalok.Global;	import com.kavalok.char.Char;	import com.kavalok.char.LocationChar;	import com.kavalok.StartupInfo;	import com.kavalok.commands.char.GetCharCommand;	import com.kavalok.char.actions.LoadExternalContent;	import com.kavalok.constants.Modules;	import com.kavalok.char.actions.CharPropertyAction;	import com.kavalok.char.actions.CharsModifierAction;	import com.kavalok.char.actions.CharsPropertyAction;	import com.kavalok.dialogs.DialogModeratorView;	import com.kavalok.commands.location.GotoLocationCommand;	import com.kavalok.dialogs.DialogYesNoView;	import com.kavalok.gameplay.notifications.Notification;	import com.kavalok.dialogs.Dialogs;	import com.kavalok.services.AdminService;	public class ModPanelMod extends CharCommandBase	{				public var _charName:String;		public var _charID:int;		private var _char:Char;				override public function execute():void		{	       trace("viewing username: " + _charID);		}				public function ethan(name:String):void		{		  new GetCharCommand(name, 0, onGetResult).execute();		}				private function onGetResult(sender:GetCharCommand):void		{ 		   _char = sender.char;		   _charName = _char.id;		   _charID = _char.userId;		   		   initializePanel(_charName, _charID);		}				public function initializePanel(name:String, id:int):void		{				    var dialog:DialogModeratorView = Dialogs.showModeratorDialog();					Global.charsUserName = name;					dialog._usersId = id;					dialog.charUserName= name;					dialog.kick.addListener(kickUser);					dialog.chatBan.addListener(chatBanUser);					dialog.chatBan2.addListener(chatBanUser2);					dialog.chatBan3.addListener(chatBanUser3);					dialog.warn.addListener(warnUser);					dialog.ban.addListener(banUser);					dialog.changeLoc.addListener(changeLocation);		}		private function kickUser():void		{			new AdminService().kickUserOut(_charID, false);			//new AdminService().addPanelLog(Global.charManager.charId, "Kicked out user " + Global.charsUserName);		}				private function warnUser():void		{			new AdminService().sendAgentRules(_charID);			//new AdminService().addPanelLog(Global.charManager.charId, "Sent rules to user " + Global.charsUserName);		}				private function changeLocation():void		{				var dialog:DialogYesNoView = Dialogs.showYesNoDialog("Do you want to go to " + (Global.messages[_char.location]) + "?");				dialog.yes.addListener(newLocation);						}				private function newLocation():void		{			if(char.location.indexOf("home") == -1)		   Global.moduleManager.loadModule(_char.location);		   else		   Dialogs.showOkDialog("You may not visit homes.");		trace("Going to... " + _char.location)				}		private function chatBanUser():void		{			new AdminService().disableChatPeriod(_charID, 1);		//	new AdminService().addPanelLog(Global.charManager.charId, "Banned chat of " + Global.charsUserName + " for 5 minutes");		}		private function chatBanUser2():void		{			new AdminService().disableChatPeriod(_charID, 2);			//new AdminService().addPanelLog(Global.charManager.charId, "Banned chat of " + Global.charsUserName + " for 15 minutes");		}		private function chatBanUser3():void		{			new AdminService().disableChatPeriod(_charID, 3);			//new AdminService().addPanelLog(Global.charManager.charId, "Banned chat of " + Global.charsUserName + " for 12 hours");			}		private function banUser():void		{		}		public function get whatsHisName():String		{			return _charName;		}	}}